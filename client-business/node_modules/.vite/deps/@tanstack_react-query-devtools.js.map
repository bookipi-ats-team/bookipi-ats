{"version":3,"file":"@tanstack_react-query-devtools.js","names":["#client","#queryFlavor","#version","#onlineManager","onlineManager","#styleNonce","#shadowDOMTarget","#buttonPosition","#position","#initialIsOpen","#errorTypes","#hideDisabledQueries","#isMounted","#Component","#dispose","#onClose","Devtools.ReactQueryDevtools","DevtoolsPanel.ReactQueryDevtoolsPanel"],"sources":["../../@tanstack/query-devtools/build/dev.js","../../@tanstack/react-query-devtools/build/modern/ReactQueryDevtools.js","../../@tanstack/react-query-devtools/build/modern/ReactQueryDevtoolsPanel.js","../../@tanstack/react-query-devtools/build/modern/index.js"],"sourcesContent":["import { createSignal, render, lazy, setupStyleSheet, createComponent, mergeProps } from './chunk/CXOMC62J.js';\n\n// src/TanstackQueryDevtools.tsx\nvar TanstackQueryDevtools = class {\n  #client;\n  #onlineManager;\n  #queryFlavor;\n  #version;\n  #isMounted = false;\n  #styleNonce;\n  #shadowDOMTarget;\n  #buttonPosition;\n  #position;\n  #initialIsOpen;\n  #errorTypes;\n  #hideDisabledQueries;\n  #Component;\n  #dispose;\n  constructor(config) {\n    const {\n      client,\n      queryFlavor,\n      version,\n      onlineManager,\n      buttonPosition,\n      position,\n      initialIsOpen,\n      errorTypes,\n      styleNonce,\n      shadowDOMTarget,\n      hideDisabledQueries\n    } = config;\n    this.#client = createSignal(client);\n    this.#queryFlavor = queryFlavor;\n    this.#version = version;\n    this.#onlineManager = onlineManager;\n    this.#styleNonce = styleNonce;\n    this.#shadowDOMTarget = shadowDOMTarget;\n    this.#buttonPosition = createSignal(buttonPosition);\n    this.#position = createSignal(position);\n    this.#initialIsOpen = createSignal(initialIsOpen);\n    this.#errorTypes = createSignal(errorTypes);\n    this.#hideDisabledQueries = createSignal(hideDisabledQueries);\n  }\n  setButtonPosition(position) {\n    this.#buttonPosition[1](position);\n  }\n  setPosition(position) {\n    this.#position[1](position);\n  }\n  setInitialIsOpen(isOpen) {\n    this.#initialIsOpen[1](isOpen);\n  }\n  setErrorTypes(errorTypes) {\n    this.#errorTypes[1](errorTypes);\n  }\n  setClient(client) {\n    this.#client[1](client);\n  }\n  mount(el) {\n    if (this.#isMounted) {\n      throw new Error(\"Devtools is already mounted\");\n    }\n    const dispose = render(() => {\n      const _self$ = this;\n      const [btnPosition] = this.#buttonPosition;\n      const [pos] = this.#position;\n      const [isOpen] = this.#initialIsOpen;\n      const [errors] = this.#errorTypes;\n      const [hideDisabledQueries] = this.#hideDisabledQueries;\n      const [queryClient] = this.#client;\n      let Devtools;\n      if (this.#Component) {\n        Devtools = this.#Component;\n      } else {\n        Devtools = lazy(() => import('./DevtoolsComponent/6ELMOJL2.js'));\n        this.#Component = Devtools;\n      }\n      setupStyleSheet(this.#styleNonce, this.#shadowDOMTarget);\n      return createComponent(Devtools, mergeProps({\n        get queryFlavor() {\n          return _self$.#queryFlavor;\n        },\n        get version() {\n          return _self$.#version;\n        },\n        get onlineManager() {\n          return _self$.#onlineManager;\n        },\n        get shadowDOMTarget() {\n          return _self$.#shadowDOMTarget;\n        }\n      }, {\n        get client() {\n          return queryClient();\n        },\n        get buttonPosition() {\n          return btnPosition();\n        },\n        get position() {\n          return pos();\n        },\n        get initialIsOpen() {\n          return isOpen();\n        },\n        get errorTypes() {\n          return errors();\n        },\n        get hideDisabledQueries() {\n          return hideDisabledQueries();\n        }\n      }));\n    }, el);\n    this.#isMounted = true;\n    this.#dispose = dispose;\n  }\n  unmount() {\n    if (!this.#isMounted) {\n      throw new Error(\"Devtools is not mounted\");\n    }\n    this.#dispose?.();\n    this.#isMounted = false;\n  }\n};\n\n// src/TanstackQueryDevtoolsPanel.tsx\nvar TanstackQueryDevtoolsPanel = class {\n  #client;\n  #onlineManager;\n  #queryFlavor;\n  #version;\n  #isMounted = false;\n  #styleNonce;\n  #shadowDOMTarget;\n  #buttonPosition;\n  #position;\n  #initialIsOpen;\n  #errorTypes;\n  #hideDisabledQueries;\n  #onClose;\n  #Component;\n  #dispose;\n  constructor(config) {\n    const {\n      client,\n      queryFlavor,\n      version,\n      onlineManager,\n      buttonPosition,\n      position,\n      initialIsOpen,\n      errorTypes,\n      styleNonce,\n      shadowDOMTarget,\n      onClose,\n      hideDisabledQueries\n    } = config;\n    this.#client = createSignal(client);\n    this.#queryFlavor = queryFlavor;\n    this.#version = version;\n    this.#onlineManager = onlineManager;\n    this.#styleNonce = styleNonce;\n    this.#shadowDOMTarget = shadowDOMTarget;\n    this.#buttonPosition = createSignal(buttonPosition);\n    this.#position = createSignal(position);\n    this.#initialIsOpen = createSignal(initialIsOpen);\n    this.#errorTypes = createSignal(errorTypes);\n    this.#hideDisabledQueries = createSignal(hideDisabledQueries);\n    this.#onClose = createSignal(onClose);\n  }\n  setButtonPosition(position) {\n    this.#buttonPosition[1](position);\n  }\n  setPosition(position) {\n    this.#position[1](position);\n  }\n  setInitialIsOpen(isOpen) {\n    this.#initialIsOpen[1](isOpen);\n  }\n  setErrorTypes(errorTypes) {\n    this.#errorTypes[1](errorTypes);\n  }\n  setClient(client) {\n    this.#client[1](client);\n  }\n  setOnClose(onClose) {\n    this.#onClose[1](() => onClose);\n  }\n  mount(el) {\n    if (this.#isMounted) {\n      throw new Error(\"Devtools is already mounted\");\n    }\n    const dispose = render(() => {\n      const _self$ = this;\n      const [btnPosition] = this.#buttonPosition;\n      const [pos] = this.#position;\n      const [isOpen] = this.#initialIsOpen;\n      const [errors] = this.#errorTypes;\n      const [hideDisabledQueries] = this.#hideDisabledQueries;\n      const [queryClient] = this.#client;\n      const [onClose] = this.#onClose;\n      let Devtools;\n      if (this.#Component) {\n        Devtools = this.#Component;\n      } else {\n        Devtools = lazy(() => import('./DevtoolsPanelComponent/PULY4AJ7.js'));\n        this.#Component = Devtools;\n      }\n      setupStyleSheet(this.#styleNonce, this.#shadowDOMTarget);\n      return createComponent(Devtools, mergeProps({\n        get queryFlavor() {\n          return _self$.#queryFlavor;\n        },\n        get version() {\n          return _self$.#version;\n        },\n        get onlineManager() {\n          return _self$.#onlineManager;\n        },\n        get shadowDOMTarget() {\n          return _self$.#shadowDOMTarget;\n        }\n      }, {\n        get client() {\n          return queryClient();\n        },\n        get buttonPosition() {\n          return btnPosition();\n        },\n        get position() {\n          return pos();\n        },\n        get initialIsOpen() {\n          return isOpen();\n        },\n        get errorTypes() {\n          return errors();\n        },\n        get hideDisabledQueries() {\n          return hideDisabledQueries();\n        },\n        get onClose() {\n          return onClose();\n        }\n      }));\n    }, el);\n    this.#isMounted = true;\n    this.#dispose = dispose;\n  }\n  unmount() {\n    if (!this.#isMounted) {\n      throw new Error(\"Devtools is not mounted\");\n    }\n    this.#dispose?.();\n    this.#isMounted = false;\n  }\n};\n\nexport { TanstackQueryDevtools, TanstackQueryDevtoolsPanel };\n","\"use client\";\n\n// src/ReactQueryDevtools.tsx\nimport * as React from \"react\";\nimport { onlineManager, useQueryClient } from \"@tanstack/react-query\";\nimport { TanstackQueryDevtools } from \"@tanstack/query-devtools\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction ReactQueryDevtools(props) {\n  const queryClient = useQueryClient(props.client);\n  const ref = React.useRef(null);\n  const {\n    buttonPosition,\n    position,\n    initialIsOpen,\n    errorTypes,\n    styleNonce,\n    shadowDOMTarget,\n    hideDisabledQueries\n  } = props;\n  const [devtools] = React.useState(\n    new TanstackQueryDevtools({\n      client: queryClient,\n      queryFlavor: \"React Query\",\n      version: \"5\",\n      onlineManager,\n      buttonPosition,\n      position,\n      initialIsOpen,\n      errorTypes,\n      styleNonce,\n      shadowDOMTarget,\n      hideDisabledQueries\n    })\n  );\n  React.useEffect(() => {\n    devtools.setClient(queryClient);\n  }, [queryClient, devtools]);\n  React.useEffect(() => {\n    if (buttonPosition) {\n      devtools.setButtonPosition(buttonPosition);\n    }\n  }, [buttonPosition, devtools]);\n  React.useEffect(() => {\n    if (position) {\n      devtools.setPosition(position);\n    }\n  }, [position, devtools]);\n  React.useEffect(() => {\n    devtools.setInitialIsOpen(initialIsOpen || false);\n  }, [initialIsOpen, devtools]);\n  React.useEffect(() => {\n    devtools.setErrorTypes(errorTypes || []);\n  }, [errorTypes, devtools]);\n  React.useEffect(() => {\n    if (ref.current) {\n      devtools.mount(ref.current);\n    }\n    return () => {\n      devtools.unmount();\n    };\n  }, [devtools]);\n  return /* @__PURE__ */ jsx(\"div\", { dir: \"ltr\", className: \"tsqd-parent-container\", ref });\n}\nexport {\n  ReactQueryDevtools\n};\n//# sourceMappingURL=ReactQueryDevtools.js.map","\"use client\";\n\n// src/ReactQueryDevtoolsPanel.tsx\nimport * as React from \"react\";\nimport { onlineManager, useQueryClient } from \"@tanstack/react-query\";\nimport { TanstackQueryDevtoolsPanel } from \"@tanstack/query-devtools\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction ReactQueryDevtoolsPanel(props) {\n  const queryClient = useQueryClient(props.client);\n  const ref = React.useRef(null);\n  const { errorTypes, styleNonce, shadowDOMTarget, hideDisabledQueries } = props;\n  const [devtools] = React.useState(\n    new TanstackQueryDevtoolsPanel({\n      client: queryClient,\n      queryFlavor: \"React Query\",\n      version: \"5\",\n      onlineManager,\n      buttonPosition: \"bottom-left\",\n      position: \"bottom\",\n      initialIsOpen: true,\n      errorTypes,\n      styleNonce,\n      shadowDOMTarget,\n      onClose: props.onClose,\n      hideDisabledQueries\n    })\n  );\n  React.useEffect(() => {\n    devtools.setClient(queryClient);\n  }, [queryClient, devtools]);\n  React.useEffect(() => {\n    devtools.setOnClose(props.onClose ?? (() => {\n    }));\n  }, [props.onClose, devtools]);\n  React.useEffect(() => {\n    devtools.setErrorTypes(errorTypes || []);\n  }, [errorTypes, devtools]);\n  React.useEffect(() => {\n    if (ref.current) {\n      devtools.mount(ref.current);\n    }\n    return () => {\n      devtools.unmount();\n    };\n  }, [devtools]);\n  return /* @__PURE__ */ jsx(\n    \"div\",\n    {\n      style: { height: \"500px\", ...props.style },\n      className: \"tsqd-parent-container\",\n      ref\n    }\n  );\n}\nexport {\n  ReactQueryDevtoolsPanel\n};\n//# sourceMappingURL=ReactQueryDevtoolsPanel.js.map","\"use client\";\n\n// src/index.ts\nimport * as Devtools from \"./ReactQueryDevtools.js\";\nimport * as DevtoolsPanel from \"./ReactQueryDevtoolsPanel.js\";\nvar ReactQueryDevtools2 = process.env.NODE_ENV !== \"development\" ? function() {\n  return null;\n} : Devtools.ReactQueryDevtools;\nvar ReactQueryDevtoolsPanel2 = process.env.NODE_ENV !== \"development\" ? function() {\n  return null;\n} : DevtoolsPanel.ReactQueryDevtoolsPanel;\nexport {\n  ReactQueryDevtools2 as ReactQueryDevtools,\n  ReactQueryDevtoolsPanel2 as ReactQueryDevtoolsPanel\n};\n//# sourceMappingURL=index.js.map"],"mappings":";;;;;;;;;;;AAGA;;;;;;;;;;;;;;;;;AA6BI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;;AAGA;;;AAGA;;;AAGA;;;AAGA;;;AAGA;;;;;;;;;;AAYE;;AAGE;AACA;;AAEF;AACA;;AAEI;;;AAGA;;;AAGA;;;AAGA;;;;AAIA;;;AAGA;;;AAGA;;;AAGA;;;AAGA;;;AAGA;;;;AAIN;AACA;;;AAGA;AAGA;AACA;;;AAKJ;;;;;;;;;;;;;;;;;;AA+BI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;;AAGA;;;AAGA;;;AAGA;;;AAGA;;;AAGA;;;AAGA;;;;;;;;;;;AAaE;;AAGE;AACA;;AAEF;AACA;;AAEI;;;AAGA;;;AAGA;;;AAGA;;;;AAIA;;;AAGA;;;AAGA;;;AAGA;;;AAGA;;;AAGA;;;AAGA;;;;AAIN;AACA;;;AAGA;AAGA;AACA;;;;;;;ACvPJ,SAAS,mBAAmB,OAAO;CACjC,MAAM,cAAc,eAAe,MAAM,OAAO;CAChD,MAAM,mBAAY,OAAO,KAAK;CAC9B,MAAM,EACJ,gBACA,UACA,eACA,YACA,YACA,iBACA,wBACE;CACJ,MAAM,CAAC,yBAAkB,SACvB,IAAI,sBAAsB;EACxB,QAAQ;EACR,aAAa;EACb,SAAS;EACT;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACD,CAAC,CACH;AACD,cAAM,gBAAgB;AACpB,WAAS,UAAU,YAAY;IAC9B,CAAC,aAAa,SAAS,CAAC;AAC3B,cAAM,gBAAgB;AACpB,MAAI,eACF,UAAS,kBAAkB,eAAe;IAE3C,CAAC,gBAAgB,SAAS,CAAC;AAC9B,cAAM,gBAAgB;AACpB,MAAI,SACF,UAAS,YAAY,SAAS;IAE/B,CAAC,UAAU,SAAS,CAAC;AACxB,cAAM,gBAAgB;AACpB,WAAS,iBAAiB,iBAAiB,MAAM;IAChD,CAAC,eAAe,SAAS,CAAC;AAC7B,cAAM,gBAAgB;AACpB,WAAS,cAAc,cAAc,EAAE,CAAC;IACvC,CAAC,YAAY,SAAS,CAAC;AAC1B,cAAM,gBAAgB;AACpB,MAAI,IAAI,QACN,UAAS,MAAM,IAAI,QAAQ;AAE7B,eAAa;AACX,YAAS,SAAS;;IAEnB,CAAC,SAAS,CAAC;AACd,QAAuB,4CAAI,OAAO;EAAE,KAAK;EAAO,WAAW;EAAyB;EAAK,CAAC;;;;;ACtD5F,SAAS,wBAAwB,OAAO;CACtC,MAAM,cAAc,eAAe,MAAM,OAAO;CAChD,MAAM,mBAAY,OAAO,KAAK;CAC9B,MAAM,EAAE,YAAY,YAAY,iBAAiB,wBAAwB;CACzE,MAAM,CAAC,yBAAkB,SACvB,IAAI,2BAA2B;EAC7B,QAAQ;EACR,aAAa;EACb,SAAS;EACT;EACA,gBAAgB;EAChB,UAAU;EACV,eAAe;EACf;EACA;EACA;EACA,SAAS,MAAM;EACf;EACD,CAAC,CACH;AACD,cAAM,gBAAgB;AACpB,WAAS,UAAU,YAAY;IAC9B,CAAC,aAAa,SAAS,CAAC;AAC3B,cAAM,gBAAgB;AACpB,WAAS,WAAW,MAAM,kBAAkB,IACzC;IACF,CAAC,MAAM,SAAS,SAAS,CAAC;AAC7B,cAAM,gBAAgB;AACpB,WAAS,cAAc,cAAc,EAAE,CAAC;IACvC,CAAC,YAAY,SAAS,CAAC;AAC1B,cAAM,gBAAgB;AACpB,MAAI,IAAI,QACN,UAAS,MAAM,IAAI,QAAQ;AAE7B,eAAa;AACX,YAAS,SAAS;;IAEnB,CAAC,SAAS,CAAC;AACd,QAAuB,4CACrB,OACA;EACE,OAAO;GAAE,QAAQ;GAAS,GAAG,MAAM;GAAO;EAC1C,WAAW;EACX;EACD,CACF;;;;;AC/CH,IAAI,sBAEAgB;AACJ,IAAI,2BAEAC"}